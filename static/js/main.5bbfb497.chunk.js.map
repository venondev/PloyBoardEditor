{"version":3,"sources":["Field.js","App.js","index.js"],"names":["COLORS","DIRS","UP","UP_RIGHT","RIGHT","DOWN_RIGHT","DOWN","DOWN_LEFT","LEFT","UP_LEFT","DIR_SORTED","Object","values","TOKENS","fieldReducer","state","action","setToken","xCord","yCord","dirs","isWhite","map","row","y","item","x","type","dir","indexOf","length","currentToolIdx","undefined","Item","isSelected","onClick","style","background","className","key","transform","Toolbelt","toggleColor","setTool","erase","setErase","copyToClip","color","opacity","token","idx","join","e","boardToString","board","reduce","acc","rowAcc","binaryString","slice","reverse","includes","parseInt","Field","useHashQueryState","Array","from","fieldString","setFieldString","useReducer","split","dec","substring","toString","concat","fields","dispatch","useState","useEffect","str","el","document","createElement","value","setAttribute","position","left","body","appendChild","select","execCommand","removeChild","copyStringToClipboard","toast","App","ReactDOM","render","getElementById","console","log"],"mappings":"gNAIMA,EACK,QADLA,EAEK,QAGLC,EAAO,CACTC,GAAI,OACJC,SAAU,QACVC,MAAO,QACPC,WAAY,SACZC,KAAM,SACNC,UAAW,SACXC,KAAM,SACNC,QAAS,UAGPC,EAAaC,OAAOC,OAAOX,GAMjC,IAQMY,EAAS,CACX,CAACZ,EAAKC,IACN,CAACD,EAAKC,GAAID,EAAKK,MACf,CAACL,EAAKQ,QAASR,EAAKE,UACpB,CAACF,EAAKC,GAAID,EAAKQ,SACf,CAACR,EAAKC,GAAID,EAAKE,SAAUF,EAAKQ,SAC9B,CAACR,EAAKK,KAAML,EAAKE,SAAUF,EAAKQ,SAChC,CAACR,EAAKK,KAAML,EAAKG,MAAOH,EAAKO,MAC7B,CAACP,EAAKE,SAAUF,EAAKI,WAAYJ,EAAKM,UAAWN,EAAKQ,UASpDK,EAAe,SAACC,EAAOC,GAEzB,IAAMC,EAAW,SAACC,EAAOC,EAAOC,EAAMC,GAArB,OACbN,EAAMO,KAAI,SAACC,EAAKC,GAAN,OAAYD,EAAID,KAAI,SAACG,EAAMC,GAAP,OAAaP,IAAUK,GAAKN,IAAUQ,EAAI,CACpEN,OACAC,WACAI,SAER,OAAQT,EAAOW,MACX,IAAK,cAAgB,IAAD,EAChB,OAAO,UAAAZ,EAAMC,EAAOQ,GAAGR,EAAOU,UAAvB,eAA2BN,MAC5BH,EAASD,EAAOU,EAAGV,EAAOQ,EAAUT,EAAMC,EAAOQ,GAAGR,EAAOU,GAAGN,KAbpDE,KAAI,SAACM,GAAD,OAASlB,GAAYA,EAAWmB,QAAQD,GAAO,GAAMlB,EAAWoB,WAaTd,EAAOK,SAC5EJ,EAASD,EAAOU,EAAGV,EAAOQ,EAAGX,EAAOG,EAAOe,gBAAiBf,EAAOK,SAE7E,IAAK,cACD,OAAOJ,EAASD,EAAOU,EAAGV,EAAOQ,OAAGQ,GAAW,GAEnD,QACI,OAAOjB,IAIbkB,EAAO,SAAC,GAA+C,IAAD,IAA7Cb,YAA6C,MAAtC,GAAsC,EAAlCC,EAAkC,EAAlCA,QAASa,EAAyB,EAAzBA,WAAYC,EAAa,EAAbA,QAC3C,OACI,yBAAKA,QAASA,EAASC,MAAO,CAACC,WAAYhB,EAAUrB,EAAeA,GAAesC,UAAS,gBAAWlB,EAAKU,QAAU,QAA1B,YAAqCI,EAAa,WAAa,KAC1Jd,EAAKE,KAAI,SAAAM,GAAG,OACT,yBAAKW,IAAK,OAASX,EAAKQ,MAAO,CAACI,UAAU,UAAD,OAAYZ,EAAZ,MAAqBU,UAAU,cAK9EG,EAAW,SAAC,GAAkF,IAAjFpB,EAAgF,EAAhFA,QAASqB,EAAuE,EAAvEA,YAAaX,EAA0D,EAA1DA,eAAgBY,EAA0C,EAA1CA,QAASC,EAAiC,EAAjCA,MAAOC,EAA0B,EAA1BA,SAAUC,EAAgB,EAAhBA,WAE/E,OAAQ,yBAAKX,QAAS,kBAAMS,GAASC,GAAS,IAAQP,UAAS,YAC3D,yBAAKH,QAAS,kBAAMO,GAAY,SAAAK,GAAK,OAAKA,MACrCT,UAAS,sBAAiBjB,EAAUrB,EAAeA,KAExD,yBAAKoC,MAAO,CAACY,QAASJ,EAAQ,MAAQ,MACjC/B,EAAOS,KAAI,SAAC2B,EAAOC,GAAR,OAAgB,kBAAC,EAAD,CACxBX,IAAG,mBAAcU,EAAME,QACvBjB,WAAYgB,IAAQnB,EACpBI,QAAS,kBAAMQ,EAAQO,IACvB9B,KAAM6B,EACN5B,QAASA,QAGjB,yBAAKc,QAAS,kBAAMU,GAAS,SAAAO,GAAC,OAAKA,MAAId,UAAS,gBAAWM,GAAS,YACpE,4BAAQN,UAAU,UAAUH,QAASW,GAArC,uBAKFO,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,QAAO,SAACC,EAAKjC,EAAKC,GAAX,OAAiBgC,EAAMjC,EAAIgC,QAAO,SAACE,EAAQhC,EAAMC,GACjF,GAAGD,GAAQA,EAAKL,KAAM,CAClB,IAAMsC,EAAehD,EAAWiD,QAAQC,UAAUtC,KAAI,SAAAI,GAAC,OAAID,EAAKL,KAAKyC,SAASnC,GAAK,IAAM,OAAKyB,KAAK,IAC7FJ,EAAQtB,EAAKJ,QAAU,IAAM,IAEnC,OAAOoC,EAAM,UAAMV,GAAN,OAAce,SAASJ,EAAc,IAArC,OAA0ChC,IAAMH,EAAIO,OAAS,EAAI,GAAK,KAEnF,OAAO2B,GAAU/B,IAAMH,EAAIO,OAAS,EAAI,GAAK,OAGlD,KAAON,IAAM8B,EAAMxB,OAAS,EAAI,GAAK,OAAM,KAmBtD,IA+CeiC,EA/CD,WAAO,IAAD,EACsBC,YAAkB,QAASX,EAvF1DY,MAAMC,KAAK,IAAID,MAAM,IAAI,kBAAMA,MAAMC,KAAK,IAAID,MAAM,IAAI,iBAAO,WAsFtD,mBACTE,EADS,KACIC,EADJ,OAEWC,qBAAWvD,EAA+BqD,EA1GhEG,MAAM,KACNhD,KAAI,SAAAC,GAAG,OAAIA,EAAI+C,MAAM,KAAKhD,KAAI,SAAA2B,GAAK,MAAc,KAAVA,EAAe,GAAM,CACzD5B,QAAsB,MAAb4B,EAAM,GACf7B,MATKmD,EASST,SAASb,EAAMuB,UAAU,GAAI,KAR3CD,IAAQ,GAAGE,SAAS,IAQ4BH,MAAM,IAAIV,UAAUL,QAAO,SAACC,EAAK9B,EAAGwB,GAAT,MAAuB,MAANxB,EAAY8B,EAAIkB,OAAOhE,EAAWwC,IAAQM,IAAK,KATvJ,IAAiBe,SA8GG,mBAETI,EAFS,KAEDC,EAFC,OAGeC,oBAAS,GAHxB,mBAGTxD,EAHS,KAGAqB,EAHA,OAIkBmC,mBAAS,GAJ3B,mBAIT9C,EAJS,KAIOY,EAJP,OAKUkC,oBAAS,GALnB,mBAKTjC,EALS,KAKFC,EALE,KAOhBiC,qBAAU,WACNV,EAAef,EAAcsB,MAC9B,CAACP,EAAgBO,IAQpB,OAAQ,yBAAKrC,UAAU,QACnB,6BACI,kBAAC,EAAD,CACIP,eAAgBA,EAChBY,QAASA,EACTtB,QAASA,EACTqB,YAAaA,EACbE,MAAOA,EACPC,SAAUA,EACVC,WAfiB,YA5BjC,SAAgCiC,GAE5B,IAAIC,EAAKC,SAASC,cAAc,YAEhCF,EAAGG,MAAQJ,EAEXC,EAAGI,aAAa,WAAY,IAC5BJ,EAAG5C,MAAQ,CAACiD,SAAU,WAAYC,KAAM,WACxCL,SAASM,KAAKC,YAAYR,GAE1BA,EAAGS,SAEHR,SAASS,YAAY,QAErBT,SAASM,KAAKI,YAAYX,GAgBtBY,CADYvC,EAAcsB,IAE1BkB,YAAM,2BAeN,6BACKlB,EAAOrD,KAAI,SAACC,EAAKC,GAAN,OACR,yBAAKc,UAAU,MAAMC,IAAKf,GACrBD,EAAID,KAAI,SAACG,EAAMC,GAAP,OAAa,kBAAC,EAAD,eAClBS,QAAS,kBACHyC,EADShC,EACA,CAAEjB,KAAM,cAAeD,IAAGF,KAC1B,CAAEG,KAAM,cAAeN,UAASU,iBAAgBL,IAAGF,OAElEe,IAAKb,GACDD,YAKpB,kBAAC,IAAD,QCjKOqE,MAVf,WACE,OACE,yBAAKxD,UAAU,OACb,4BAAQA,UAAU,cACd,kBAAC,EAAD,SCHVyD,IAASC,OAAO,kBAAC,EAAD,MAASf,SAASgB,eAAe,SAEjDC,QAAQC,IAAI,S","file":"static/js/main.5bbfb497.chunk.js","sourcesContent":["import React, {useReducer, useState, useEffect} from \"react\";\nimport {toast, ToastContainer} from \"react-toastify\";\nimport { useHashQueryState } from \"use-location-state\";\n\nconst COLORS = {\n    WHITE: \"white\",\n    BLACK: \"black\"\n};\n\nconst DIRS = {\n    UP: \"0deg\",\n    UP_RIGHT: \"45deg\",\n    RIGHT: \"90deg\",\n    DOWN_RIGHT: \"135deg\",\n    DOWN: \"180deg\",\n    DOWN_LEFT: \"225deg\",\n    LEFT: \"270deg\",\n    UP_LEFT: \"315deg\"\n};\n\nconst DIR_SORTED = Object.values(DIRS);\n\nfunction dec2bin(dec){\n    return (dec >>> 0).toString(2);\n}\n\nconst parseBoardString = boardString => \n    boardString\n        .split(\"/\")\n        .map(row => row.split(\",\").map(token => token === \"\" ? {} : ({\n            isWhite: token[0] === \"w\",\n            dirs: dec2bin(parseInt(token.substring(1), 10)).split(\"\").reverse().reduce((acc, x, idx) => x === \"1\" ? acc.concat(DIR_SORTED[idx]) : acc, [])\n        })))\n\nconst TOKENS = [\n    [DIRS.UP],\n    [DIRS.UP, DIRS.DOWN],\n    [DIRS.UP_LEFT, DIRS.UP_RIGHT],\n    [DIRS.UP, DIRS.UP_LEFT],\n    [DIRS.UP, DIRS.UP_RIGHT, DIRS.UP_LEFT],\n    [DIRS.DOWN, DIRS.UP_RIGHT, DIRS.UP_LEFT],\n    [DIRS.DOWN, DIRS.RIGHT, DIRS.LEFT],\n    [DIRS.UP_RIGHT, DIRS.DOWN_RIGHT, DIRS.DOWN_LEFT, DIRS.UP_LEFT]\n];\n\nconst getInitialField = () => {\n    return Array.from(new Array(9), () => Array.from(new Array(9), () => ({})));\n};\n\nconst rotate = dirs => dirs.map((dir) => DIR_SORTED[(DIR_SORTED.indexOf(dir) + 1) % (DIR_SORTED.length)])\n\nconst fieldReducer = (state, action) => {\n\n    const setToken = (xCord, yCord, dirs, isWhite) =>\n        state.map((row, y) => row.map((item, x) => yCord === y && xCord === x ? {\n            dirs,\n            isWhite\n        } : item));\n\n    switch (action.type) {\n        case \"FIELD_CLICK\": {\n            return state[action.y][action.x]?.dirs\n                ? setToken(action.x, action.y, rotate(state[action.y][action.x].dirs), action.isWhite)\n                : setToken(action.x, action.y, TOKENS[action.currentToolIdx], action.isWhite)\n        }\n        case \"FIELD_ERASE\": {\n            return setToken(action.x, action.y, undefined, false);\n        }\n        default:\n            return state;\n    }\n};\n\nconst Item = ({dirs = [], isWhite, isSelected, onClick}) => {\n    return (\n        <div onClick={onClick} style={{background: isWhite ? COLORS.WHITE : COLORS.BLACK}} className={`item ${!dirs.length && \"empty\"} ${isSelected ? \"selected\" : \"\"}`}>\n        {dirs.map(dir =>\n            <div key={\"item\" + dir} style={{transform: `rotate(${dir})`}} className=\"line\"></div>\n        )}\n    </div>)\n};\n\nconst Toolbelt = ({isWhite, toggleColor, currentToolIdx, setTool, erase, setErase, copyToClip}) => {\n\n    return (<div onClick={() => erase && setErase(false)} className={`toolbelt`}>\n        <div onClick={() => toggleColor(color => !color)}\n             className={`colorpicker ${isWhite ? COLORS.WHITE : COLORS.BLACK}`}>\n        </div>\n        <div style={{opacity: erase ? \"0.2\" : \"1\"}}>\n            {TOKENS.map((token, idx) => <Item\n                key={`toolbelt-${token.join()}`}\n                isSelected={idx === currentToolIdx}\n                onClick={() => setTool(idx)}\n                dirs={token}\n                isWhite={isWhite}\n            />)}\n        </div>\n        <div onClick={() => setErase(e => !e)} className={`erase ${erase && \"active\"}`}></div>\n        <button className=\"copybtn\" onClick={copyToClip}>Copy to clipboard</button>\n    </div>)\n\n};\n\nconst boardToString = board => board.reduce((acc, row, y) => acc + row.reduce((rowAcc, item, x) => {\n            if(item && item.dirs) {\n                const binaryString = DIR_SORTED.slice().reverse().map(x => item.dirs.includes(x) ? \"1\" : \"0\").join(\"\");\n                const color = item.isWhite ? \"w\" : \"b\";\n\n                return rowAcc + `${color}${parseInt(binaryString, 2)}${x === row.length - 1 ? \"\" : \",\"}`\n            } else {\n                return rowAcc + (x === row.length - 1 ? \"\" : \",\");\n            }\n\n        }, \"\") + (y === board.length - 1 ? \"\" : \"/\"), \"\")\n\nfunction copyStringToClipboard (str) {\n    // Temporäres Element erzeugen\n    var el = document.createElement('textarea');\n    // Den zu kopierenden String dem Element zuweisen\n    el.value = str;\n    // Element nicht editierbar setzen und aus dem Fenster schieben\n    el.setAttribute('readonly', '');\n    el.style = {position: 'absolute', left: '-9999px'};\n    document.body.appendChild(el);\n    // Text innerhalb des Elements auswählen\n    el.select();\n    // Ausgewählten Text in die Zwischenablage kopieren\n    document.execCommand('copy');\n    // Temporäres Element löschen\n    document.body.removeChild(el);\n}\n\nconst Field = () => {\n    const [fieldString, setFieldString] = useHashQueryState(\"board\", boardToString(getInitialField()));\n    const [fields, dispatch] = useReducer(fieldReducer, parseBoardString(fieldString))\n    const [isWhite, toggleColor] = useState(true);\n    const [currentToolIdx, setTool] = useState(0);\n    const [erase, setErase] = useState(false);\n\n    useEffect(() => {\n        setFieldString(boardToString(fields))\n    }, [setFieldString, fields])\n\n    const copyFieldToClipboard = () => {\n        const ret = boardToString(fields);\n        copyStringToClipboard(ret);\n        toast(\"Copied to clipboard\");\n    };\n\n    return (<div className=\"main\">\n        <div>\n            <Toolbelt\n                currentToolIdx={currentToolIdx}\n                setTool={setTool}\n                isWhite={isWhite}\n                toggleColor={toggleColor}\n                erase={erase}\n                setErase={setErase}\n                copyToClip={copyFieldToClipboard}\n            />\n        </div>\n        <div>\n            {fields.map((row, y) => (\n                <div className=\"row\" key={y}>\n                    {row.map((item, x) => <Item\n                        onClick={() => erase\n                            ? dispatch({ type: \"FIELD_ERASE\", x, y })\n                            : dispatch({ type: \"FIELD_CLICK\", isWhite, currentToolIdx, x, y })\n                        }\n                        key={x}\n                        {...item}\n                    />)}\n                </div>\n            ))}\n        </div>\n        <ToastContainer />\n    </div>)\n};\n\nexport default Field;","import React from 'react';\nimport 'react-toastify/dist/ReactToastify.css';\nimport Field from \"./Field\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n          <Field/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\nconsole.log(\"v1.2\")"],"sourceRoot":""}